-pedantic
#     Issue warnings needed for strict compliance to the standard
-Wabi
-Waggregate-return
#     Warn about returning structures, unions or arrays
-Wall
#     Enable most warning messages
-Wbad-function-cast
#     Warn about casting functions to incompatible types
-Wcast-align
#     Warn about pointer casts which increase alignment
-Wcast-qual
#     Warn about casts which discard qualifiers
-Wchar-subscripts
#     Warn about subscripts whose type is \"char\"
-Wcomment
#     Warn about possibly nested block comments, and C++ comments spanning more than one physical line
-Wcomments
#     Synonym for -Wcomment
-Wconversion
#     Warn about possibly confusing type conversions
-Wctor-dtor-privacy
#     Warn when all constructors and destructors are private
-Wdeclaration-after-statement
#     Warn when a declaration is found after a statement
-Wdeprecated
#     Warn about deprecated compiler features
-Wdeprecated-declarations
#     Warn about uses of __attribute__((deprecated)) declarations
-Wdisabled-optimization
#     Warn when an optimization pass is disabled
-Wdiv-by-zero
#     Warn about compile-time integer division by zero
-Weffc++
#     Warn about violations of Effective C++ style rules
-Wendif-labels
#     Warn about stray tokens after #elif and #endif
-Werror-implicit-function-declaration
#     Make implicit function declarations an error
-Wextra
#     Print extra (possibly unwanted) warnings
-Wfloat-equal
#     Warn if testing floating point numbers for equality
-Wformat
#     Warn about printf/scanf/strftime/strfmon format string anomalies
-Wformat-extra-args
#     Warn if passing too many arguments to a function for its format string
-Wformat-nonliteral
#     Warn about format strings that are not literals
-Wformat-security
#     Warn about possible security problems with format functions
-Wformat-y2k
#     Warn about strftime formats yielding 2-digit years
-Wformat-zero-length
-Wformat=
-Wimplicit
-Wimplicit-function-declaration
#     Warn about implicit function declarations
-Wimplicit-int
#     Warn when a declaration does not specify a type
-Wimport
#     Deprecated.  This switch has no effect.
-Winit-self
#     Warn about variables which are initialized to themselves.
-Winline
#     Warn when an inlined function cannot be inlined
-Winvalid-offsetof
#     Warn about invalid uses of the \"offsetof\" macro
-Winvalid-pch
#     Warn about PCH files that are found but not used
-Wlarger-than-<number>
#     Warn if an object is larger than <number> bytes
-Wlong-long
#     Do not warn about using \"long long\" when -pedantic
-Wmain
#     Warn about suspicious declarations of \"main\"
-Wmissing-braces
#     Warn about possibly missing braces around initializers
-Wmissing-declarations
#     Warn about global functions without previous declarations
-Wmissing-format-attribute
#     Warn about functions which might be candidates for format attributes
-Wmissing-noreturn
#     Warn about functions which might be candidates for __attribute__((noreturn))
-Wmissing-prototypes
#     Warn about global functions without prototypes
-Wmultichar
#     Warn about use of multi-character character constants
-Wnested-externs
#     Warn about \"extern\" declarations not at file scope
-Wnon-template-friend
#     Warn when non-templatized friend functions are declared within a template
-Wnon-virtual-dtor
#     Warn about non-virtual destructors
-Wnonnull
-Wold-style-cast
#     Warn if a C-style cast is used in a program
-Wold-style-definition
#     Warn if an old-style parameter definition is used
-Woverloaded-virtual
#     Warn about overloaded virtual function names
-Wpacked
#     Warn when the packed attribute has no effect on struct layout
-Wpadded
#     Warn when padding is required to align structure members
-Wparentheses
#     Warn about possibly missing parentheses
-Wpmf-conversions
#     Warn when converting the type of pointers to member functions
-Wpointer-arith
#     Warn about function pointer arithmetic
-Wprotocol
#     Warn if inherited methods are unimplemented
-Wredundant-decls
#     Warn about multiple declarations of the same object
-Wreorder
#     Warn when the compiler reorders code
-Wreturn-type
#     Warn whenever a function's return type defaults to \"int\" (C), or about inconsistent return types (C++)
-Wselector
#     Warn if a selector has multiple methods
-Wsequence-point
#     Warn about possible violations of sequence point rules
-Wshadow
#     Warn when one local variable shadows another
-Wsign-compare
#     Warn about signed-unsigned comparisons
-Wsign-promo
#     Warn when overload promotes from unsigned to signed
-Wstrict-aliasing
#     Warn about code which might break strict aliasing rules
-Wstrict-prototypes
#     Warn about unprototyped function declarations
-Wswitch
#     Warn about enumerated switches, with no default, missing a case
-Wswitch-default
#     Warn about enumerated switches missing a \"default:\" statement
-Wswitch-enum
#     Warn about all enumerated switches missing a specific case
-Wsynth
#     Warn when synthesis behavior differs from Cfront
-Wsystem-headers
#     Do not suppress warnings from system headers
-Wtraditional
#     Warn about features not present in traditional C
-Wtrigraphs
#     Warn if trigraphs are encountered that might affect the meaning of the program
-Wundeclared-selector
-Wundef
#     Warn if an undefined macro is used in an #if directive
-Wuninitialized
#     Warn about uninitialized automatic variables
-Wunknown-pragmas
#     Warn about unrecognized pragmas
-Wunreachable-code
#     Warn about code that will never be executed
-Wunused
#     Enable all -Wunused- warnings
-Wunused-function
#     Warn when a function is unused
-Wunused-label
#     Warn when a label is unused
-Wunused-macros
#     Warn about macros defined in the main file that are not used
-Wunused-parameter
#     Warn when a function parameter is unused
-Wunused-value
#     Warn when an expression value is unused
-Wunused-variable
#     Warn when a variable is unused
-Wwrite-strings
#     Give strings the type \"array of char\"
